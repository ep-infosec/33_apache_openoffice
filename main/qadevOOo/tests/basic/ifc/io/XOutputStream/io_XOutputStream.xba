<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="io_XOutputStream" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************








Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.io.XOutputStream
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim Bytes(10) As Integer
    Dim rBytes(10) As Integer

    Test.StartMethod("writeBytes()")
    bOK = true

    for i = 0 to ubound(Bytes())
        Bytes(i) = i
    next i
    oObj.writeBytes(Bytes())

    oInputStream = getInStream()
    iBytesRead = oInputStream.readBytes(rBytes(), ubound(Bytes()) + 1)
    Out.Log("" &amp; iBytesRead &amp; " bytes were read")
    bOK = bOK AND iBytesRead = ubound(Bytes()) + 1

    for i = 0 to ubound(rBytes())
        Out.Log("Expected " &amp; Bytes(i) &amp; ", actual is " &amp; int(rBytes(i)))
        bOK = bOK AND Bytes(i) = rBytes(i)
    next i

    Test.MethodTested("writeBytes()", bOK)

    Test.StartMethod("flush()")
    bOK = true
    oObj.flush()
    Test.MethodTested("flush()", bOK)

    Test.StartMethod("closeOutput()")
    bOK = true
    Out.Log("This method is called in main module.")
    Test.MethodTested("closeOutput()", bOK)

    ResetStreams()

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
