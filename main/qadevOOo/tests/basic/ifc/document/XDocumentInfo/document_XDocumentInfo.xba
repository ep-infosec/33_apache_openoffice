<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="document_XDocumentInfo" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.document.XDocumentInfo
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim fieldCnt As Variant
    Dim oldProp As String, newProp As String, resProp As String

    Test.StartMethod("getUserFieldCount()")
    bOK = true
    fieldCnt = oObj.getUserFieldCount()
    bOK = bOK AND (fieldCnt &gt; 0)
    Test.MethodTested("getUserFieldCount()", bOK)

    Test.StartMethod("getUserFieldName()")
    bOK = true
    oldProp = oObj.getUserFieldName(0)
    bOK = bOK AND NOT isNull(oldProp)
    Test.MethodTested("getUserFieldName()", bOK)

    Test.StartMethod("setUserFieldName()")
    bOK = true
    newProp = "_" + oldProp
    oObj.setUserFieldName(0, newProp)
    resProp = oObj.getUserFieldName(0)
    Out.Log("Was: '" + oldProp + "', New: '" + newProp + "', Get: '" + resProp + "'")
    bOK = bOK AND (resProp = newProp)
    Test.MethodTested("setUserFieldName()", bOK)

    Test.StartMethod("getUserFieldValue()")
    bOK = true
    oldProp = oObj.getUserFieldValue(0)
    bOK = bOK AND NOT isNull(oldProp)
    Test.MethodTested("getUserFieldValue()", bOK)

    Test.StartMethod("setUserFieldValue()")
    bOK = true
    newProp = "_" + oldProp
    oObj.setUserFieldValue(0, newProp)
    resProp = oObj.getUserFieldValue(0)
    Out.Log("Was: '" + oldProp + "', New: '" + newProp + "', Get: '" + resProp + "'")
    bOK = bOK AND (resProp = newProp)
    Test.MethodTested("setUserFieldValue()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
