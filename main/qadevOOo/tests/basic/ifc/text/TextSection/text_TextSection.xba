<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_TextSection" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' SERVICE: 
' com.sun.star.text.TextSection
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean


    PropertyTester.TestProperty("Condition")

    PropertyTester.TestProperty("IsVisible")

    PropertyTester.TestProperty("IsProtected")
    
    Dim link As New com.sun.star.text.SectionFileLink
    link.FileURL = utils.Path2URL(cTestDocsDir + "Iterator.sxw")

    PropertyTester.TestProperty("FileLink", Array(link))

    PropertyTester.TestProperty("LinkRegion")

    PropertyTester.TestProperty("DDECommandType")

    PropertyTester.TestProperty("DDECommandFile")

    PropertyTester.TestProperty("DDECommandElement")

    PropertyTester.TestProperty("BackGraphicURL")

    PropertyTester.TestProperty("BackGraphicFilter")

    PropertyTester.TestProperty("BackGraphicLocation")

    PropertyTester.TestProperty("FootnoteIsCollectAtTextEnd")

    PropertyTester.TestProperty("FootnoteIsRestartNumbering")

    PropertyTester.TestProperty("FootnoteRestartNumberingAt")

    PropertyTester.TestProperty("FootnoteIsOwnNumbering")

    oObj.FootnoteIsOwnNumbering = true
    oObj.FootnoteNumberingType = 1
    PropertyTester.TestProperty("FootnoteNumberingType", Array(com.sun.star.style.NumberingType.ARABIC))

    PropertyTester.TestProperty("FootnoteNumberingPrefix")

    PropertyTester.TestProperty("FootnoteNumberingSuffix")

    PropertyTester.TestProperty("EndnoteIsCollectAtTextEnd")

    PropertyTester.TestProperty("EndnoteIsRestartNumbering")

    PropertyTester.TestProperty("EndnoteRestartNumberingAt")

    PropertyTester.TestProperty("EndnoteIsOwnNumbering")

    oObj.EndnoteIsOwnNumbering = true
    oObj.EndnoteNumberingType = 1
    PropertyTester.TestProperty("EndnoteNumberingType", Array(com.sun.star.style.NumberingType.ARABIC))

    PropertyTester.TestProperty("EndnoteNumberingPrefix")

    PropertyTester.TestProperty("EndnoteNumberingSuffix")

    PropertyTester.TestProperty("IsAutomaticUpdate")

    Test.StartMethod("TextColumns")
    Dim oTC As Variant
    Dim oldVal, newVal, val2set As Integer
    oTC = oDoc.createInstance("com.sun.star.text.TextColumns")
    oldVal = oObj.TextColumns.ColumnCount
    Out.Log("COLUMNS BEFORE: "+oldVal)
    if (oldVal &lt; 100) then 
	val2set = oldVal + 20
    else 
	val2set = oldVal - 20
    Endif
    Out.Log("COLUMNS TO SET: "+val2set)
    oTC.ColumnCount = val2set                                                                     
    oObj.TextColumns = oTC
    newVal = oObj.TextColumns.ColumnCount                                                                  
    Out.Log("COLUMNS AFTER: "+newVal)
    bOK = oldVal &lt;&gt; newVal
    Test.MethodTested("TextColumns", bOK)

    PropertyTester.TestProperty("SectionLeftMargin")

    PropertyTester.TestProperty("SectionRightMargin")

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
