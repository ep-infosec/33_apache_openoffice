<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XAutoTextGroup" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global nGlobalLong as Long

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XAutoTextGroup
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Dim aTitles() As Variant
    Dim aElements() As Variant
    Dim oCursor As Object


   bOK = true

   oCursor = oDoc.Text.createTextCursor()
   oCursor.gotoEnd(true)

    Test.StartMethod("getTitles()")
    bOK = true
    aTitles() = oObj.Titles
    bOK = bOK AND NOT (uBound(aTitles()) = -1)
    Test.MethodTested("getTitles()", bOK)

    Test.StartMethod("insertNewByName()")
    bOK = true
    oObj.insertNewByName(cIfcShortName, cIfcShortName, oCursor)
    bOK = bOK AND (oObj.Count &gt; nGlobalLong)
    Test.MethodTested("insertNewByName()", bOK)

    Test.StartMethod("renameByName()")
    bOK = true
    cName =  mid(cIfcShortName,1,2)
    oObj.renameByName(cIfcShortName,cName, cName &amp; cIfcShortName )
    aElements() = oObj.getElementNames()
    bOk = bOK AND (cName = aElements(uBound(aElements())))
    Test.MethodTested("renameByName()", bOK)

    Test.StartMethod("removeByName()")
    bOK = true
    oObj.removeByName(cName)
    aElements() = oObj.getElementNames()
    bOk = bOK AND (cName &lt;&gt; aElements(uBound(aElements())))
    Test.MethodTested("removeByName()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
