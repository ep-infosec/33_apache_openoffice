<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XAutoTextContainer" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global nGlobalLong As Long

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XAutoTextContainer
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oAutoText As Object
    Dim aElementNames() As Variant
    Dim i As Integer
    Dim nCount As Integer

    Out.Log("Remove element with name '" &amp; cIfcShortName &amp; "' if exists")
    aElementNames() = oObj.ElementNames

    for i = 0 to uBound(aElementNames())
        if aElementNames(i) = cIfcShortName then
            oObj.removeByName(cIfcShortName)
            nGlobalLong = oObj.Count
        end if
    next i

    Test.StartMethod("insertNewByName()")
    bOK = true
    oAutoText = oObj.insertNewByName(cIfcShortName)
    nCount = oObj.Count
    bOK = bOK AND (oObj.Count = nGlobalLong + 1)
    Test.MethodTested("insertNewByName()", bOK)

    Test.StartMethod("removeByName()")
    bOK = true
    oObj.removeByName(cIfcShortName)

    nCount = oObj.Count
    bOK = bOK AND (oObj.Count = nGlobalLong)
    Test.MethodTested("removeByName()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
