<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="view_XSelectionSupplier" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global SelectableObj1 As Object
'     - Global SelectableObj2 As Object

'*************************************************************************




Dim nCB1Val, nCB2Val As Integer


Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.view.XSelectionSupplier
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK, bSelected As Boolean
    Dim oListener1, oListener2, oSelection As Object

    Out.Log("creating two Listeners")
    oListener1 = createUNOListener("CB1_", "com.sun.star.view.XSelectionChangeListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.view.XSelectionChangeListener")
    bOK = NOT isNULL(oListener1) AND NOT isNULL(oListener2)
    Out.Log("Listeners creation : " &amp; bOK)

    Test.StartMethod("select()")
    bOK = true
    out.log("Trying to select ...")
    bOK = bOK AND oObj.select(SelectableObj1)
    Test.MethodTested("select()", bOK)

    Test.StartMethod("getSelection()")
    bOK = true
    oSelection = oObj.getSelection()
    bOK = bOK AND NOT isNULL(oSelection)

    ' The selection is either specified by an object which is contained
    ' in the component to which the view belongs or it is an interface of a
    ' collection which contains such objects.

    if bOK then
        if (cObjectName = "sw.SwXTextView") then
            bOK = bOK AND oSelection.hasElements()
            bOK = bOK AND (oSelection.getByIndex(0).String = SelectableObj1.String)
        elseif (hasUnoInterfaces(oSelection, "com.sun.star.container.XElementAccess")) then
            bOK = bOK AND oSelection.hasElements()
            if bOK then bOK = bOK AND (oSelection.getByIndex(0).dbg_methods = SelectableObj1.dbg_methods)
        else
            bOK = bOK AND (oSelection.dbg_methods = SelectableObj1.dbg_methods)
        end if
    end if

    Test.MethodTested("getSelection()", bOK)

    Test.StartMethod("addSelectionChangeListener()")
    bOK = true
    Out.Log("Adding two listeners...")
    oObj.addSelectionChangeListener(oListener1)
    oObj.addSelectionChangeListener(oListener2)

    Out.Log("Select item...")
    ResetCB()
    bOK = bOK AND oObj.select(SelectableObj2)
    bOK = bOK AND (nCB1Val &gt; 0) AND (nCB2Val &gt; 0)
    Test.MethodTested("addSelectionChangeListener()", bOK)

    Test.StartMethod("removeSelectionChangeListener()")
    bOK = true
    Out.Log("Remove first listener...")
    oObj.removeSelectionChangeListener(oListener1)

    Out.Log("Select item...")
    ResetCB()
    bOK = bOK AND oObj.select(SelectableObj1)
    bOK = bOK AND (nCB1Val = 0) AND (nCB2Val &gt; 0)
    Test.MethodTested("removeSelectionChangeListener()", bOK)

    Out.Log("Remove last listener...")
    oObj.removeSelectionChangeListener(oListener2)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Sub CB1_selectionChanged
    Out.Log("Listener 1 was called")
    nCB1Val = nCB1Val + 1
end sub

Sub CB2_selectionChanged
    Out.Log("Listener 2 was called")
    nCB2Val = nCB2Val + 1
end sub

Sub ResetCB()
    nCB1Val = 0
    nCB2Val = 0
End Sub
</script:module>
