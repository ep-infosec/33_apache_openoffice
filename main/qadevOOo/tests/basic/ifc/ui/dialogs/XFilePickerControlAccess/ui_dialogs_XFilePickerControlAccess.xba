<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ui_dialogs_XFilePickerControlAccess" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global controlId As Short
'       Global controlInitVal As Variant

'*************************************************************************






Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.ui.dialogs.XFilePickerControlAccess
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oldVal As Variant, newVal As Variant, resVal As Variant
    Dim oldLabel As String, newLabel As String, resLabel As String

    Test.StartMethod("setValue()")
    Test.StartMethod("getValue()")
    bOK = true
    newVal = controlInitVal 'PropertyTester.Change(oldVal, oCoreRefl.getType(oldVal).Name)
    oObj.setValue(controlId, 0, newVal)
    wait(100)
    resVal = oObj.getValue(controlId, 0)
    Out.Log("New: " + newVal + ", Res: " + resVal)
    bOK = bOK AND PropertyTester.equals(newVal, resVal)

    Test.MethodTested("setValue()", bOK)
    Test.MethodTested("getValue()", bOK)

    Test.StartMethod("getLabel()")
    bOK = true
    oldLabel = oObj.getLabel(controlId)
    Test.MethodTested("getLabel()", bOK)

    Test.StartMethod("setLabel()")
    bOK = true
    newLabel = oldLabel + "_"
    oObj.setLabel(controlId, newLabel)
    resLabel = oObj.getLabel(controlId)
    bOK = bOK AND (resLabel = newLabel)
    Test.MethodTested("setLabel()", bOK)

    Test.StartMethod("enableControl()")
    bOK = true
    oObj.enableControl(controlId, false)
    oObj.enableControl(controlId, true)
    Test.MethodTested("enableControl()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
