<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="linguistic2_XHyphenator" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************







Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.linguistic2.XHyphenator
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Dim vProp As new com.sun.star.beans.PropertyValue
    Dim vPops(0) As Variant
    Dim vLocale As new com.sun.star.lang.Locale
    Dim oHyphenate As Object
    Dim oAlternative As Object
    Dim oPossible As Object

    vProps(0) = vProp

    vLocale.Language = "de"
    vLocale.Country = "DE"
    vLocale.Variant = ""


    Test.StartMethod("hyphenate()")
    bOK = true
    oHyphenate = oObj.hyphenate("wacker", vLocale, 3, vProps())
    bOK = bOK AND hasUnoInterfaces(oHyphenate, "com.sun.star.linguistic2.XHyphenatedWord")
    Test.MethodTested("hyphenate()", bOK)

    Test.StartMethod("queryAlternativeSpelling()")
    bOK = true
    oAlternative = oObj.queryAlternativeSpelling("wacker", vLocale, 2, vProps())
    bOK = bOK AND hasUnoInterfaces(oHyphenate, "com.sun.star.linguistic2.XHyphenatedWord")
    Test.MethodTested("queryAlternativeSpelling()", bOK)

    Test.StartMethod("createPossibleHyphens()")
    bOK = true
    oPossible = oObj.createPossibleHyphens("wacker", vLocale, vProps())
    bOK = bOK AND hasUnoInterfaces(oPossible, "com.sun.star.linguistic2.XPossibleHyphens")
    Test.MethodTested("createPossibleHyphens()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
