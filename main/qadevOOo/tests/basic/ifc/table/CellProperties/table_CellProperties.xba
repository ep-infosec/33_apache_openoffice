<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="table_CellProperties" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit


Dim bOK As Boolean
Dim oTB As Variant, oldVal As Variant 
Dim newVal As Variant, valToSet As Variant



Sub RunTest()

'*************************************************************************
' SERVICE: 
' com.sun.star.table.CellProperties
'*************************************************************************
On Error Goto ErrHndl
    Dim aCellStyles(1) As String

    aCellStyles(0) = "Result"
    aCellStyles(1) = "Default"
    PropertyTester.TestProperty("CellStyle", aCellStyles())

    PropertyTester.TestProperty("CellBackColor")

    PropertyTester.TestProperty("IsCellBackgroundTransparent")

    Dim aNumberFormats(1) As Integer
    aNumberFormats(0) = 2
    aNumberFormats(1) = 1
    PropertyTester.TestProperty("NumberFormat", aNumberFormats())

    PropertyTester.TestProperty("ShadowFormat")

    PropertyTester.TestProperty("HoriJustify")

    PropertyTester.TestProperty("VertJustify")

    PropertyTester.TestProperty("Orientation")

    PropertyTester.TestProperty("CellProtection")

    Test.StartMethod("TableBorder")

    Dim oTBNew As New com.sun.star.table.TableBorder
    bOK = true
    oldVal = oObj.TableBorder.Distance
    Out.Log("value of 'TableBorder.Distance' before: "+oldVal)
    oTBNew = oObj.TableBorder
    Out.Log("setting value: "+ (oldVal + 20))
    oTBNew.Distance = oldVal + 20
    oObj.setPropertyValue("TableBorder", oTBNew)
    newVal = oObj.TableBorder.Distance
    Out.Log("value of 'TableBorder.Distance' after: "+newVal)
    bOK = bOK AND (newVal = oTBNew.Distance)
    Test.MethodTested("TableBorder", bOK)

    PropertyTester.TestProperty("IsTextWrapped")

    Dim nRotate(1) As Integer
    nRotate(0) = 30999
    nRotate(1) = 4500
    PropertyTester.TestProperty("RotateAngle",nRotate())

    PropertyTester.TestProperty("RotateReference")

    PropertyTester.TestProperty("AsianVerticalMode")
Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
