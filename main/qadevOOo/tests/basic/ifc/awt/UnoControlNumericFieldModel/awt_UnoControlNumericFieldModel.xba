<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_UnoControlNumericFieldModel" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************







Sub RunTest()

'*************************************************************************
' SERVICE: 
' com.sun.star.awt.UnoControlNumericFieldModel
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim newVal, oldVal As Long

    PropertyTester.TestProperty("BackgroundColor")

    PropertyTester.TestProperty("Border")

    PropertyTester.TestProperty("DecimalAccuracy")

    PropertyTester.TestProperty("Enabled")

    PropertyTester.TestProperty("FontDescriptor")

    PropertyTester.TestProperty("ShowThousandsSeparator")

    PropertyTester.TestProperty("Printable")

    PropertyTester.TestProperty("ReadOnly")

    PropertyTester.TestProperty("Spin")

    PropertyTester.TestProperty("StrictFormat")

    PropertyTester.TestProperty("Tabstop")

    PropertyTester.TestProperty("TextColor")

    Test.StartMethod("Value")
    bOK = true
    oldVal = oObj.Value
    Out.Log("value before: "+oldVal)
    if (oldVal &lt;&gt; 999) then 
        oObj.Value = 999
    else
        oObj.Value = 1000
    endif
    newVal = oObj.Value
    Out.Log("value after: "+newVal)
    bOK = bOK AND (newVal &lt;&gt; oldVal)
    Test.MethodTested("Value",bOK)

    Test.StartMethod("ValueMax")
    bOK = true
    oldVal = oObj.ValueMax
    Out.Log("value before: "+oldVal)
    if (oldVal &lt;&gt; 10000) then 
        oObj.ValueMax = 10000
    else
        oObj.ValueMax = 10001
    endif
    newVal = oObj.ValueMax
    Out.Log("value after: "+newVal)
    bOK = bOK AND (newVal &lt;&gt; oldVal)
    Test.MethodTested("ValueMax",bOK)

    Test.StartMethod("ValueMin")
    bOK = true
    oldVal = oObj.ValueMin
    Out.Log("value before: "+oldVal)
    if (oldVal &lt;&gt; -10000) then 
        oObj.ValueMin = -10000
    else
        oObj.ValueMin = -10001
    endif
    newVal = oObj.ValueMin
    Out.Log("value after: "+newVal)
    bOK = bOK AND (newVal &lt;&gt; oldVal)
    Test.MethodTested("ValueMin",bOK)

    PropertyTester.TestProperty("ValueStep")

    PropertyTester.TestProperty("HelpText")

    PropertyTester.TestProperty("HelpURL")

    PropertyTester.TestProperty("FontEmphasisMark")

    PropertyTester.TestProperty("FontRelief")

    PropertyTester.TestProperty("TextLineColor")

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
