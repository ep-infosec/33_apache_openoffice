<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_XPatternField" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.awt.XPatternField
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oldVal, newVal As Variant
    Dim eMask, lMask, eMaskOld, lMaskOld As String

    Test.StartMethod("getMasks()")
    Test.StartMethod("setMasks()")
    bOK = true
    oObj.getMasks(eMaskOld, lMaskOld)
    Out.Log("value before: {"+eMaskOld+", "+lMaskOld+"}")
    oObj.setMasks(eMaskOld+"__NEW", lMaskOld+"__NEW")
    oObj.getMasks(eMask, lMask)
    Out.Log("value after: {"+eMask+", "+lMask+"}")
    bOK = bOK AND (eMask &lt;&gt; eMaskOld) AND (lMask &lt;&gt; lMaskOld)
    Test.MethodTested("setMasks()", bOK)
    Test.MethodTested("getMasks()", bOK)
    
    Test.StartMethod("getString()")
    Test.StartMethod("setString()")
    bOK = true
    oldVal = oObj.getString()
    Out.Log("value before: "+oldVal)
    oObj.setString(oldVal+"__NEW")
    newVal = oObj.getString()
    Out.Log("value after: "+newVal)
    bOK = bOK AND (oldVal &lt;&gt; newVal)
    Test.MethodTested("setString()", bOK)
    Test.MethodTested("getString()", bOK)
    
    Test.StartMethod("isStrictFormat()")
    Test.StartMethod("setStrictFormat()")
    bOK = true
    oldVal = oObj.isStrictFormat()
    Out.Log("value before: "+oldVal)
    if (oldVal) then 
        oObj.setStrictFormat(false)
    else
        oObj.setStrictFormat(true)
    endif
    newVal = oObj.isStrictFormat()
    Out.Log("value after: "+newVal)
    bOK = bOK AND (oldVal &lt;&gt; newVal)
    Test.MethodTested("setStrictFormat()", bOK)
    Test.MethodTested("isStrictFormat()", bOK)
    

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
