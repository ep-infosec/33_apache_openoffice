<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_XDataTransferProviderAccess" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************







Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.awt.XDataTransferProviderAccess
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    ' Here create a window for testing getDragGestureRecognizer(), getDragSource(), getDropTarget() methods
    Dim oWndDescr As new com.sun.star.awt.WindowDescriptor
    Dim oBounds As new com.sun.star.awt.Rectangle
    oWndDescr.Type = com.sun.star.awt.WindowClass.TOP
    oWndDescr.WindowServiceName = ""
    oWndDescr.ParentIndex = -1
    oBounds.X = 10 : oBounds.Y = 20
    oBounds.Width = 110 : oBounds.Height = 120
    oWndDescr.Bounds = oBounds
    with com.sun.star.awt.WindowAttribute
        oWndDescr.WindowAttributes = .CLOSEABLE AND .MOVEABLE AND .SIZEABLE AND .BORDER AND .SHOW
    end with

    Dim oWnd As Object
    oWnd = oObj.createWindow(oWndDescr)

    Test.StartMethod("getDragGestureRecognizer()")
    bOK = true
    Dim oRecognizer As Object
    oRecognizer = oObj.getDragGestureRecognizer(oWnd)
    Out.Log("Recognizer is NULL : " &amp; isNULL(oRecognizer))
    bOK = bOK AND NOT isNULL(oRecognizer)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oRecognizer, "com.sun.star.datatransfer.dnd.XDragGestureRecognizer")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDragGestureRecognizer interface.")
    end if
    Test.MethodTested("getDragGestureRecognizer()", bOK)

    Test.StartMethod("getDragSource()")
    bOK = true
    Dim oDragSource As Object
    oDragSource = oObj.getDragSource(oWnd)
    Out.Log("DragSource is NULL : " &amp; isNULL(oDragSource))
    bOK = bOK AND NOT isNULL(oDragSource)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oDragSource, "com.sun.star.datatransfer.dnd.XDragSource")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDragSource interface.")
    end if
    Test.MethodTested("getDragSource()", bOK)

    Test.StartMethod("getDropTarget()")
    bOK = true
    Dim oDropTarget As Object
    oDropTarget = oObj.getDropTarget(oWnd)
    Out.Log("DropTarget is NULL : " &amp; isNULL(oDropTarget))
    bOK = bOK AND NOT isNULL(oDropTarget)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oDropTarget, "com.sun.star.datatransfer.dnd.XDropTarget")
        if (NOT bOK) then Out.Log("Returned object doesn't support XDropTarget interface.")
    end if
     Test.MethodTested("getDropTarget()", bOK)

    Test.StartMethod("getClipboard()")
    bOK = true
    Dim oClipboard As Object
    oClipboard = oObj.getClipboard("")
    Out.Log("Clipboard is NULL : " &amp; isNULL(oClipboard))
    bOK = bOK AND NOT isNULL(oClipboard)
    if (bOK) then
        bOK = bOK AND hasUnoInterfaces(oClipboard, "com.sun.star.datatransfer.clipboard.XClipboard")
        if (NOT bOK) then Out.Log("Returned object doesn't support XClipboard interface.")
    end if
    Test.MethodTested("getClipboard()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
