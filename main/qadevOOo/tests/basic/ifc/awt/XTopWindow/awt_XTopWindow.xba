<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="awt_XTopWindow" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.awt.XTopWindow
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim list1 As Object, list2 As Object
    Dim aDoc As Object
    
    list1 = createUnoListener("L1_", "com.sun.star.awt.XTopWindowListener")
    list2 = createUnoListener("L2_", "com.sun.star.awt.XTopWindowListener")
    
    l1Called = false
    l2Called = false

    Test.StartMethod("addTopWindowListener()")
    bOK = true

    oObj.addTopWindowListener(list1)
    oObj.addTopWindowListener(list2)

    Test.StartMethod("removeTopWindowListener()")
    oObj.removeTopWindowListener(list1)

    Out.Log("Creating a doc ...")
    aDoc = utils.createDocument("swriter", "Window On Top")
    Out.Log("Doc created.")
    wait(1000)

    Test.StartMethod("toFront()")
    bOK = true
    activated = false
    deactivated = false
    oObj.toFront()
    wait(1000)
    bOK = bOK AND activated AND NOT deactivated
    Test.MethodTested("toFront()", bOK)

    Test.StartMethod("toBack()")
    bOK = true
    activated = false
    deactivated = false
    oObj.toBack()
    wait(1000)
    bOK = bOK AND deactivated AND NOT activated
    Test.MethodTested("toBack()", bOK)
    
    Out.Log("Disposing a doc ...")
    aDoc.dispose()
    Out.Log("Doc disposed.")
    wait(1000)

    bOK = L2Called
    Test.MethodTested("addTopWindowListener()", bOK)
    bOK = bOK AND NOT L1Called
    Test.MethodTested("removeTopWindowListener()", bOK)

    Test.StartMethod("setMenuBar()")
    bOK = true
    Dim menu As Object
    menu = createUnoService("com.sun.star.awt.MenuBar")
    menu.insertItem(1, "MenuItem", com.sun.star.awt.MenuItemStyle.CHECKABLE, 1)
    oObj.setMenuBar(menu)
    Test.MethodTested("setMenuBar()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Dim L1Called As Boolean
Dim L2Called As Boolean

Dim activated As Boolean
Dim deactivated As Boolean

Sub L1_windowActivated()
    L1Called = true
End Sub
Sub L1_windowDeactivated()
    L1Called = true
End Sub

Sub L2_windowActivated()
    L2Called = true
    activated = true
    Out.Log("Activated ...")
End Sub
Sub L2_windowDeactivated()
    L2Called = true
    deactivated = true
    Out.Log("Deactivated ...")
End Sub
</script:module>
