<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="container_XNameReplace" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'      Global cNameToReplace As String 'name of instance to be replased
'      Global oReplaceInstance As Variant 'instance, that will be inserted
'      instead old one

'*************************************************************************

Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.container.XNameReplace
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oOldObject As Object
    Dim cOldObjName As String
    Dim oNewControl As Object
    Dim cNewObjName As String        
    Dim NewAddress As Object
    Dim InstAddress As Object
    Dim cReplInstName As String

    Test.StartMethod("replaceByName()")
    bOK = true

    if (cObjectName = "sc.ScCellRangesObj") then
        oOldObject = oObj.getByName(cNameToReplace)
        InstAddress = oReplaceInstance.getRangeAddress

        oObj.replaceByName(cNameToReplace, oReplaceInstance)

        oNewControl = oObj.getByName(cNameToReplace)
        NewAddress = oNewControl.getRangeAddress

        bOK = bOK AND NewAddress.Sheet = InstAddress.Sheet
        bOK = bOK AND NewAddress.StartColumn = InstAddress.StartColumn
        bOK = bOK AND NewAddress.EndColumn = InstAddress.EndColumn
        bOK = bOK AND NewAddress.StartRow = InstAddress.StartRow
        bOK = bOK AND NewAddress.EndRow = InstAddress.EndRow
        
    elseif typename(oReplaceInstance) = "String" then
        Dim oNewObj as Variant
        Dim oOldObj as Variant
        oOldObj = oObj.getByName(cNameToReplace)
        oObj.replaceByName(cNameToReplace, oReplaceInstance)
        oNewObj = oObj.getByName(cNameToReplace)
        bOK = bOK and not PropertyTester.equals(oOldObj, oNewObj)
    else
        oOldObject = oObj.getByName(cNameToReplace)
        cReplInstName = oReplaceInstance.Name
        Out.Log("ReplaceInstance.name = '" &amp; cReplInstName &amp; "'")
        cOldObjName = oOldObject.Name
        Out.Log("OldObject.name = '" &amp; cOldObjName &amp; "'")

        oObj.replaceByName(cNameToReplace, oReplaceInstance)
        oNewControl = oObj.getByName(cNameToReplace)

        cReplInstName = oReplaceInstance.Name
        Out.Log("ReplaceInstance.name = '" &amp; cReplInstName &amp; "'")
        cNewObjName = oNewControl.Name
        Out.Log("NewObject.name = '" &amp; cNewObjName &amp; "'")

        bOK = bOK AND (oReplaceInstance.Name = cNameToReplace)
    end if

    Test.MethodTested("replaceByName()", bOK)
    
Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
