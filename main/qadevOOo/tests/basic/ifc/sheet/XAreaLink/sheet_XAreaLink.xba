<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XAreaLink" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************







Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XAreaLink
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean


    Test.StartMethod("getSourceArea()")
    bOK = true
    Dim cArea As String
    cArea = oObj.getSourceArea()
    bOK = bOK AND NOT isNULL(cArea)
    Test.MethodTested("getSourceArea()", bOK)


    Test.StartMethod("setSourceArea()")
    bOK = true
    Dim oldArea As String
    Dim newArea As String
    oldArea = oObj.getSourceArea()
    newArea = "Sheet0.I6:G8"
    Out.Log("Set SourceArea to '" &amp; newArea &amp; "'")
    oObj.setSourceArea(newArea)
    newArea = oObj.getSourceArea()
    Out.Log("SourceArea is '" &amp; newArea &amp; "'")
    bOK = bOK AND oldArea &lt;&gt; newArea
    oObj.setSourceArea(oldArea)
    Test.MethodTested("setSourceArea()", bOK)

    Test.StartMethod("getDestArea()")
    Dim oArea As Object
    bOK = true
    oArea = oObj.getDestArea()
    bOK = bOK AND NOT isNULL(oArea)
    Test.MethodTested("getDestArea()", bOK)

    Test.StartMethod("setDestArea()")
    Dim sNewArea As New com.sun.star.table.CellRangeAddress
    Dim sOldArea As Object

    bOK = true
    sOldArea = oObj.getDestArea()

    sNewArea.Sheet = sOldArea.Sheet
    sNewArea.StartRow = sOldArea.StartRow + 1
    sNewArea.StartColumn = sOldArea.StartColumn + 1
    sNewArea.EndRow = sOldArea.EndRow + 1
    sNewArea.EndColumn = sOldArea.EndColumn + 1

    oObj.setDestArea(sNewArea)

    bOK = bOK AND NOT isNULL(oObj.getDestArea())
    if (bOK) then
        bOK = bOK AND (sOldArea.Sheet = oObj.getDestArea.Sheet)
        bOK = bOK AND (sOldArea.StartRow = oObj.getDestArea.StartRow - 1)
        bOK = bOK AND (sOldArea.StartColumn = oObj.getDestArea.StartColumn - 1)
        bOK = bOK AND (sOldArea.EndRow = oObj.getDestArea.EndRow - 1)
        bOK = bOK AND (sOldArea.EndColumn = oObj.getDestArea.EndColumn - 1)
    end if

    oObj.setDestArea(sOldArea)

    Test.MethodTested("setDestArea()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
