<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XLabelRange" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XLabelRange
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK, bAllOK As Boolean
    Dim oldArea, newArea As Object
    Dim Area As New com.sun.star.table.CellRangeAddress

    Test.StartMethod("getLabelArea()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getLabelArea())
    Test.MethodTested("getLabelArea()", bOK)

    bAllOK = bAllOK AND bOK

    Test.StartMethod("setLabelArea()")
    bOK = true

    Area.Sheet = 0
    Area.StartColumn = 1
    Area.StartRow = 1
    Area.EndColumn = 5
    Area.EndRow = 5

    oldArea = oObj.getLabelArea()
    oObj.setLabelArea(Area)
    newArea = oObj.getLabelArea()
    bOK = bOK AND NOT isNULL(newArea)

    bOK = bOK AND newArea.Sheet = Area.Sheet
    bOK = bOK AND newArea.StartColumn = Area.StartColumn
    bOK = bOK AND newArea.StartRow = Area.StartRow
    bOK = bOK AND newArea.EndColumn = Area.EndColumn
    bOK = bOK AND newArea.EndRow = Area.EndRow

    oObj.setLabelArea(oldArea)
    Test.MethodTested("setLabelArea()", bOK)

    Test.StartMethod("getDataArea()")
    bOK = true
    bOK = bOK AND NOT isNULL(oObj.getDataArea())
    Test.MethodTested("getDataArea()", bOK)

    Test.StartMethod("setDataArea()")
    bOK = true

    Area.Sheet = 0
    Area.StartColumn = 1
    Area.StartRow = 1
    Area.EndColumn = 5
    Area.EndRow = 5

    oldArea = oObj.getDataArea()
    oObj.setDataArea(Area)
    newArea = oObj.getDataArea()
    bOK = bOK AND NOT isNULL(newArea)

    bOK = bOK AND newArea.Sheet = Area.Sheet
    bOK = bOK AND newArea.StartColumn = Area.StartColumn
    bOK = bOK AND newArea.StartRow = Area.StartRow
    bOK = bOK AND newArea.EndColumn = Area.EndColumn
    bOK = bOK AND newArea.EndRow = Area.EndRow

    oObj.setDataArea(oldArea)
    Test.MethodTested("setDataArea()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
