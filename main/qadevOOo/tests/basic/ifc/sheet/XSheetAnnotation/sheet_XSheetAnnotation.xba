<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XSheetAnnotation" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XSheetAnnotation
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oldVal, newVal, valToSet As Boolean
    Dim vPos As Variant

    Test.StartMethod("getAuthor()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getAuthor()) = 8)
    Test.MethodTested("getAuthor()", bOK)

    Test.StartMethod("getDate()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getDate()) = 8)
    Test.MethodTested("getDate()", bOK)

    Test.StartMethod("getIsVisible()")
    Test.StartMethod("setIsVisible()")
    bOK = true
    oldVal = oObj.getIsVisible()
    Out.Log("value before: " + oldVal)
    if oldVal then 
        valToSet = false
    else
        valToSet = true
    endif
    Out.Log("setting value: " + valToSet)
    oObj.setIsVisible(valToSet)
    newVal = oObj.getIsVisible()
    Out.Log("value after: " + newVal)
    bOK = bOK AND (oObj.getIsVisible() = valToSet)
    Test.MethodTested("getIsVisible()", bOK)
    Test.MethodTested("setIsVisible()", bOK)

    Test.StartMethod("getPosition()")
    bOK = true
    vPos = oObj.getPosition()
    bOK = bOK AND isNumeric(vPos.Column)
    Test.MethodTested("getPosition()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
