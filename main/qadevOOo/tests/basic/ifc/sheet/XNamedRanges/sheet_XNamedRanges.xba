<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XNamedRanges" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XNamedRanges
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim count As Integer
    Dim outRange As New com.sun.star.table.CellAddress
    Dim range As New com.sun.star.table.CellRangeAddress
    Dim i As Integer

    Test.StartMethod("addNewByName()")
    bOK = true
    outRange.Sheet = 0
    outRange.Row = 1
    outRange.Column = 1
    count = oObj.Count
    oObj.addNewByName(cIfcShortName, "T4:Y7", outRange, 0)
    bOK = bOK AND oObj.count = count + 1
    bOK = bOK AND oObj.hasByName(cIfcShortName)
    Test.MethodTested("addNewByName()", bOK)

    Test.StartMethod("addNewFromTitles()")
    bOK = true
    count = oObj.count

    range.Sheet = 0
    range.StartRow = 1
    range.StartColumn = 2
    range.EndRow = 3
    range.EndColumn = 4

    for i = 1 to 5
        oDoc.Sheets(0).getCellByPosition(i, 1).String = "Col" &amp; i
    next i

    oObj.addNewFromTitles(range, com.sun.star.sheet.Border.TOP)

    bOK = bOK AND (oObj.count = count + 3)

    bOK = bOK AND NOT oObj.hasByName("Col1")
    bOK = bOK AND oObj.hasByName("Col2")
    bOK = bOK AND oObj.hasByName("Col3")
    bOK = bOK AND oObj.hasByName("Col4")
    bOK = bOK AND NOT oObj.hasByName("Col5")
    Test.MethodTested("addNewFromTitles()", bOK)

    Test.StartMethod("removeByName()")
    bOK = true
    count = oObj.Count
    oObj.removeByName(cIfcShortName)
    bOK = bOK AND (count = oObj.count + 1)
    bOK = bOK AND NOT oObj.hasByName(cIfcShortName)
    Test.MethodTested("removeByName()", bOK)

    Test.StartMethod("outputList()")
    bOK = true
    outRange.Sheet = 0
    outRange.Row = 5
    outRange.Column = 5

    count = oObj.count
    for i = 4 to 5 + count
        oDoc.Sheets(0).getCellByPosition(5, i).String = "a"
        oDoc.Sheets(0).getCellByPosition(6, i).String = "b"
    next i

    oObj.outputList(outRange)

    bOK = bOK AND oDoc.Sheets(0).getCellByPosition(5, 4).String = "a"
    bOK = bOK AND oDoc.Sheets(0).getCellByPosition(6, 4).String = "b"
    bOK = bOK AND oDoc.Sheets(0).getCellByPosition(5, 5 + count).String = "a"
    bOK = bOK AND oDoc.Sheets(0).getCellByPosition(6, 5 + count).String = "b"

    for i = 5 to 4 + count
        bOK = bOK AND oDoc.Sheets(0).getCellByPosition(5, i).String &lt;&gt; "a"
        bOK = bOK AND oDoc.Sheets(0).getCellByPosition(6, i).String &lt;&gt; "b"
        bOK = bOK AND oObj.hasByName(oDoc.Sheets(0).getCellByPosition(5, i).String)
    next i

    Test.MethodTested("outputList()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
