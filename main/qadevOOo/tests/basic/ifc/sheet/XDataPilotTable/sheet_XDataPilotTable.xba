<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XDataPilotTable" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global oOutputRange As New com.sun.star.table.CellAddress

'*************************************************************************






Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XDataPilotTable
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim Range, oSheet As Object
    Dim oldData, newData, CellRow, CellCol As Integer
    
    Test.StartMethod("getOutputRange()")
    bOK = true
    Range = oObj.getOutputRange()
    bOK = bOK AND NOT isNULL(Range)
    if (bOK) then
        bOK = bOK AND Range.Sheet = oOutputRange.Sheet
        bOK = bOK AND Range.StartRow = oOutputRange.Row
        bOK = bOK AND Range.StartColumn = oOutputRange.Column
    end if
    Test.MethodTested("getOutputRange()", bOK)

    Test.StartMethod("refresh()")
    bOK = true
    CellRow = oObj.getSourceRange.EndRow
    CellCol = oObj.getSourceRange.EndColumn
    oSheet = oDoc.Sheets.getByIndex(0)
    oSheet.getCellByPosition(CellCol, CellRow).Value = 5
    oldData = oSheet.getCellByPosition(oOutputRange.Column, oOutputRange.Row+3).Value   
    oObj.refresh()
    newData = oSheet.getCellByPosition(oOutputRange.Column, oOutputRange.Row+3).Value
    bOK = bOK AND (oldData &lt;&gt; newData)
    Test.MethodTested("refresh()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
