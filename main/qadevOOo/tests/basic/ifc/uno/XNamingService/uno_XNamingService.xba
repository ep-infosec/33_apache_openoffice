<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="uno_XNamingService" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global oObjectToRegister As Object

'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.uno.XNamingService
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("registerObject()")
    bOK = true
    oObj.registerObject(cIfcShortName, oObjectToRegister)
    Test.MethodTested("registerObject()", bOK)

    Test.StartMethod("getRegisteredObject()")
    bOK = true
    objregObj = oObj.getRegisteredObject(cIfcShortName)
    bOK = bOK AND NOT isNULL(objregObj)
    bOK = bOK AND objregObj.implementationName = oObjectToRegister.implementationName
    Test.MethodTested("getRegisteredObject()", bOK)

    Test.StartMethod("revokeObject()")
    bOK = true
    oObj.revokeObject(cIfcShortName)
    Out.Log("Object was revoked")
    on Error goto GoodExc
        Out.Log("Trying to getRegistered object ...")
        objregObj = oObj.getRegisteredObject(cIfcShortName)
        Out.Log("No exception.")
        bOK = bOK AND isNULL(objregObj)
        if (bOK) then Out.Log("But NULL was returned")
    goto cont
    GoodExc:
        Out.Log("Expected exception - OK")
    cont:
    Test.MethodTested("revokeObject()", bOK)


Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
