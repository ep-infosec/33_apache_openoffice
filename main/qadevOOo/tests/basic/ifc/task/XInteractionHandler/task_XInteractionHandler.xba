<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="task_XInteractionHandler" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.task.XInteractionHandler
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim bExExpected As Boolean

    Test.StartMethod("handle()")
    bOK = true

    ' This method needs an com::sun::star::task::XInteractionRequest
    ' as a parameter. In BASIC we can't create own services.
    ' So we can't create an instance that supports XInteractionRequest.
    ' All that can be tested here is that there is no exception when
    ' calling this method with NULL and that there IS an exception,
    ' when calling method with wrong parameter.

    bExExpected = false
    oObj.handle(NULL)

    bExExpected = true
    oObj.handle(oObj)

    Test.MethodTested("handle()", bOK)

Exit Sub
ErrHndl:
    if (bExExpected) then
        Out.Log("EXPECTED EXCEPTION. " &amp; error)
    else
        Test.Exception()
        bOK = false
    end if
    resume next
End Sub
</script:module>
