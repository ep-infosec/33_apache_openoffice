<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sd_AccessibleDrawDocumentView" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

Global oDP1 As Object, oDP2 As Object


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sd.AccessibleDrawDocumentView
'*************************************************************************
On Error Goto ErrHndl
    Dim oDPs As Object
    Dim oWin As Object, xRoot As Object, oShape As Object
    Dim oSearchedContext As Object

    oDoc = utils.createDocument("sdraw", cObjectName)
    Out.Log("Getting drawpages...")
    oDPs = oDoc.getDrawPages()
    oDP1 = oDPs.insertNewByIndex(1)
    oDP2 = oDPs.getByIndex(0)
    Out.Log("Inserting a shape...")
    oShape = toolkittools.addShapeToDrawDoc(oDP2,1000,2000,"Rectangle")
    oWin = utils.at_getCurrentWindow(oDoc)
    xRoot = utils.at_getAccessibleObject(oWin)
    oSearchedContext = utils.at_getAccessibleObjectForRole(xRoot, com.sun.star.accessibility.AccessibleRole.DOCUMENT)
    oObj = oSearchedContext

Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    utils.closeObject(oDoc)
End Sub

Sub fireEvent()
    oDoc.getCurrentController().setCurrentPage(oDP2)
    oDoc.getCurrentController().setCurrentPage(oDP1)
End Sub

</script:module>
