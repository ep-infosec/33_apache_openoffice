<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sw_SwXAutoTextGroup" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:
Global nGlobalLong as Long


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sw.SwXAutoTextGroup
'*************************************************************************
On Error Goto ErrHndl
    Dim i As Integer
    Dim oCursor As Object
    Dim oCollection As Object
    Dim aElementNames As Variant

    oDoc = utils.createDocument("swriter", cObjectName)
    oCursor = oDoc.Text.createTextCursor()
    oCollection = createUNOService("com.sun.star.text.AutoTextContainer")

    aElementNames() = oCollection.ElementNames
    'cGlobalString = aElementNames(uBound(aElementNames())

    for i = lBound(aElementNames()) to uBound(aElementNames())
        oDoc.Text.insertString(oCursor, aElementNames(i), false )
        oDoc.Text.insertControlCharacter(oCursor, 0, false)
        oCursor.gotoEnd(false)
    next i
    oDoc.Text.insertControlCharacter(oCursor, 0, false)

    nGlobalLong = 0
    i = 0
    'create the object to test here
    while nGlobalLong = 0
      oObj = oCollection.getByName(aElementNames(i))
      nGlobalLong = oObj.Count
      i = i + 1
    wend
    nGlobalLong = oObj.Count
Exit Sub
ErrHndl:
    Test.Exception()
End Sub
</script:module>
