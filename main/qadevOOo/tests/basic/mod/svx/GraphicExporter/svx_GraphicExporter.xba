<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="svx_GraphicExporter" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************





' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:
' Requiered for  com.sun.star.document.XFilter
  Global oFilterDescriptor As Variant
  Global pictureURL As String 

' Requiered for  com.sun.star.document.XExporter
  Global oSrcDocument As Object


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' svx.GraphicExporter
'*************************************************************************
On Error Goto ErrHndl

    oDoc = utils.createDocument("sdraw", cObjectName)
    oObj = createUnoService("com.sun.star.drawing.GraphicExportFilter")    

    Dim shape As Object
    shape = oDoc.createInstance("com.sun.star.drawing.GraphicObjectShape")
    out.log("create com.sun.star.drawing.GraphicObjectShape : is NULL? " + IsNULL(shape))

    Dim shapeSize As new com.sun.star.awt.Size
    Dim shapePos As new com.sun.star.awt.Point
    shapeSize.Width = 5000
    shapeSize.Height = 5000
    out.log("set size of shape : " + shapeSize.Width + ", " + shapeSize.Height)
    shape.setSize(shapeSize)
    shapePos.x = 1500
    shapePos.y = 1000
    out.log("set position of shape : " + shapePos.x + ", " + shapePos.y)
    shape.setPosition(shapePos)
    out.log("adds created shape")
    oDoc.getDrawPages.getByIndex(0).add(shape)
    out.log("set GraphicURL to " + utils.Path2URL(cTestDocsDir &amp; "space-metal.jpg") )
    shape.GraphicURL = utils.Path2URL(cTestDocsDir &amp; "space-metal.jpg")
    out.log("set shape as source document for created object")
    oObj.setSourceDocument(shape)
    oSrcDocument = shape

    Dim _Filter(2) As New com.sun.star.beans.PropertyValue
    _Filter(0).Name = "FilterName" : _Filter(0).Value = "JPG"       
    Dim url as new com.sun.star.util.URL
    url.Complete = utils.getTempFileURL("picture.jpg", True)
    pictureURL = url.Complete 
    out.log("URL descriptor : " + pictureURL)
    _Filter(1).Name = "URL" : _Filter(1).Value = url
    _Filter(2).Name = "MediaType" : _Filter(1).Value = "image/jpeg"
    oFilterDescriptor = _Filter()
    
Exit Sub
ErrHndl:
    Test.Exception()
End Sub
    
Function checkFilter() As Boolean
    If IsNULL(soapi_test_hidewindows) Or soapi_test_hidewindows = True Then
        out.log("all windows are hide")
        checkFilter() = True
    Else
        Dim simpleFile As Object
        simpleFile = createUnoService("com.sun.star.ucb.SimpleFileAccess")
        out.log("creates com.sun.star.ucb.SimpleFileAccess : is NULL? " + IsNULL(SimpleFile))
        checkFilter() = simpleFile.exists(pictureURL)
        out.log("check existing of " + pictureURL + ": " + checkFilter)
    EndIf
End Function
</script:module>
