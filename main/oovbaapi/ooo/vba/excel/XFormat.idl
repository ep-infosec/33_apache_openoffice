/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __ooo_vba_excel_XFormat_idl__
#define __ooo_vba_excel_XFormat_idl__

#ifndef __com_sun_star_script_BasicErrorException_idl__
#include <com/sun/star/script/BasicErrorException.idl>
#endif
#ifndef __ooo_vba_XHelperInterface_idl__
#include <ooo/vba/XHelperInterface.idl>
#endif

module ooo {  module vba { module excel {

interface XBorders;
interface XFont;
interface XInterior;

interface XFormat 
{
    interface ::ooo::vba::XHelperInterface;
    // void			Clear(  ) raises ( com::sun::star::script::BasicErrorException );

    any Borders( [in] any Item )
        raises(com::sun::star::script::BasicErrorException);

    XFont Font()
        raises(com::sun::star::script::BasicErrorException);

    XInterior Interior()
        raises(com::sun::star::script::BasicErrorException);

    void setNumberFormat([in] any NumberFormat)
        raises(com::sun::star::script::BasicErrorException);

    any getNumberFormat()
        raises(com::sun::star::script::BasicErrorException);

    void setNumberFormatLocal([in] any NumberFormatLocal)
        raises(com::sun::star::script::BasicErrorException);

    any getNumberFormatLocal()
        raises(com::sun::star::script::BasicErrorException);

    void setIndentLevel([in] any IndentLevel)
        raises(com::sun::star::script::BasicErrorException);

    any getIndentLevel()
        raises(com::sun::star::script::BasicErrorException);

    void setHorizontalAlignment([in] any HorizontalAlignment)
        raises(com::sun::star::script::BasicErrorException);

    any getHorizontalAlignment()
        raises(com::sun::star::script::BasicErrorException);

    void setVerticalAlignment([in] any VerticalAlignment)
        raises(com::sun::star::script::BasicErrorException);

    any getVerticalAlignment()
        raises(com::sun::star::script::BasicErrorException);

    void setOrientation([in] any Orientation)
        raises(com::sun::star::script::BasicErrorException);

    any getOrientation()
        raises(com::sun::star::script::BasicErrorException);

    void setShrinkToFit([in] any ShrinkToFit)
        raises(com::sun::star::script::BasicErrorException);

    any getShrinkToFit()
        raises(com::sun::star::script::BasicErrorException);

    void setWrapText([in] any WrapText)
        raises(com::sun::star::script::BasicErrorException);

    any getWrapText()
        raises(com::sun::star::script::BasicErrorException);

    void setLocked([in] any Locked)
        raises(com::sun::star::script::BasicErrorException);

    any getLocked()
        raises(com::sun::star::script::BasicErrorException);

    void setFormulaHidden([in] any FormulaHidden)
        raises(com::sun::star::script::BasicErrorException);

    any getFormulaHidden()
        raises(com::sun::star::script::BasicErrorException);

    void setMergeCells([in] any MergeCells)
        raises(com::sun::star::script::BasicErrorException);

    any getMergeCells()
        raises(com::sun::star::script::BasicErrorException);

    void setReadingOrder([in] any ReadingOrder)
        raises(com::sun::star::script::BasicErrorException);

    any getReadingOrder()
        raises(com::sun::star::script::BasicErrorException);

};

}; }; };

#endif

