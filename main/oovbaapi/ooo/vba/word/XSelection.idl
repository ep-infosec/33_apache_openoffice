/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __ooo_vba_word_XSelection_idl__
#define __ooo_vba_word_XSelection_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __ooo_vba_XHelperInterface_idl__
#include <ooo/vba/XHelperInterface.idl>
#endif


module ooo {  module vba {  module word { 

interface XRange;
interface XParagraphFormat;
interface XFind;
interface XFont;
interface XStyle;
interface XHeaderFooter;
interface XSelection
{
    interface ooo::vba::XHelperInterface;

    [attribute] string Text;
    [attribute, readonly] XRange Range;
    [attribute] XParagraphFormat ParagraphFormat;
    [attribute, readonly] XFind Find;
    [attribute] XStyle Style;
    [attribute, readonly] XFont Font;
    [attribute, readonly] XHeaderFooter HeaderFooter;
    [attribute] long LanguageID;
    [attribute] long Start;
    [attribute] long End;

    any Tables( [in] any Index );
    any Fields( [in] any Index );
    void TypeText( [in] string Text );
    void HomeKey( [in] any Unit, [in] any Extend );
    void EndKey( [in] any Unit, [in] any Extend );
    void Delete( [in] any Unit, [in] any Count );
    void MoveRight( [in] any Unit, [in] any Count, [in] any Extend );
    void MoveLeft( [in] any Unit, [in] any Count, [in] any Extend );
    void MoveDown( [in] any Unit, [in] any Count, [in] any Extend );
    void TypeParagraph();
    void InsertParagraph();
    void InsertParagraphBefore();
    void InsertParagraphAfter();
    void TypeBackspace();
    XRange GoTo( [in] any What, [in] any Which, [in] any Count, [in] any Name );
    any Information( [in] long Type );
    void InsertBreak( [in] any Type );
    any ShapeRange();
};

}; }; };

#endif


