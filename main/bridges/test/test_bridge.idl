/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>

module test
{

struct TestTypes
{
	boolean					   Bool;
	char					   Char;
	byte					   Byte;
	short					   Short;
	unsigned short			   UShort;
	long					   Long;
	unsigned long			   ULong;
	hyper					   Hyper;
	unsigned hyper			   UHyper;
	float					   Float;
	double					   Double;
//	test::TestEnum			   Enum;
	string					   String;
	com::sun::star::uno::XInterface   Interface;
	any						   Any;
};

exception TestBridgeException : com::sun::star::uno::Exception
{

};

interface XCallMe : com::sun::star::uno::XInterface
{
	void call( [in] string s , [in] long nToDo ) raises( TestBridgeException );
	[oneway] void callOneway( [in] string s , [in] long nToDo );
	[attribute] string sAttribute;
	void callAgain( [in] XCallMe callAgain, [in] long nToCall );
	TestTypes transport( [in] TestTypes types );
	[oneway] void drawLine( [in] long x1 , [in] long y1, [in] long x2, [in] long y2 );
};

interface XInterfaceTest : com::sun::star::uno::XInterface
{
	void setIn( [in] XCallMe callback );
	void setInOut( [inout] XCallMe callback );
	void getOut( [out] XCallMe callback );
	XCallMe get();
};

interface XTestFactory : com::sun::star::uno::XInterface
{
	XCallMe createCallMe();
	XInterfaceTest createInterfaceTest();
};


};
