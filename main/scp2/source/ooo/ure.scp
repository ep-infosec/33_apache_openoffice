/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#include "macros.inc"

Directory gid_Dir_Ure_Bin
#if defined MACOSX
    ParentID = gid_Brand_Dir_Program;
//    ParentID = gid_Dir_UreLink;
#else
//  see ure_into.scp -> should be cleaned up later
    ParentID = gid_Dir_Common_Ure;
#endif
    DosName = "";
End

#if !defined(WNT) && !defined(OS2)
Directory gid_Dir_Ure_Lib
#if defined MACOSX
    ParentID = gid_Brand_Dir_Program;
//    Parentid = gid_Dir_UreLink;
#else
    ParentID = gid_Dir_Common_Ure;
#endif
    DosName = "";
End
#endif

#if defined SOLAR_JAVA
Directory gid_Dir_Ure_Java
#if defined MACOSX
    ParentID = gid_Brand_Dir_Program;
#else
    ParentID = gid_Dir_Common_Ure;
#endif
    DosName = "classes";
End
#endif

// Public Executables:

#if defined WNT
File gid_File_Exe_Uno
    BIN_FILE_BODY;
    Dir = gid_Dir_Common_Ure;
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(uno);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if !defined(WNT) && !defined(OS2)
Shortcut gid_Shortcut_Exe_Uno
    FileID = gid_File_Exe_StartupSh;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(uno);
    Styles = (RELATIVE);
End
#endif

#if defined WNT
File gid_File_Exe_Regcomp
    BIN_FILE_BODY;
    Dir = gid_Dir_Common_Ure;
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(regcomp);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#ifndef WNT
Shortcut gid_Shortcut_Exe_Regcomp
    FileID = gid_File_Exe_StartupSh;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(regcomp);
    Styles = (RELATIVE);
End
#endif

File gid_File_Exe_Regmerge
    BIN_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(regmerge);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Exe_Regview
    BIN_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(regview);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#if !defined MACOSX && !defined WNT && defined SOLAR_JAVA && !defined OS2
File gid_File_Exe_Javaldx
    BIN_FILE_BODY;
    Dir = gid_Dir_Common_Ure;
//    Dir = gid_Dir_Ure_Bin;
    Name = EXENAME(javaldx);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

// Private Executables:

#if !defined(WNT) && !defined(OS2)
File gid_File_Exe_StartupSh
    BIN_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = "/ure/startup.sh";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if !defined(WNT) && !defined(OS2)
File gid_File_Exe_UnoBin
    BIN_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = "uno.bin";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if !defined(WNT) && !defined(OS2)
File gid_File_Exe_RegcompBin
    BIN_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
//    Dir = gid_Dir_Ure_Bin;
    Name = "regcomp.bin";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

// Public Dynamic Libraries:

File gid_File_Dl_Cppu
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined MACOSX
    Name = SCP2_URE_DL_UNO_NORMAL("cppu");
#else
    Name = SCP2_URE_DL_UNO_VER("cppu", "3");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Cppuhelper
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "cppuh3.dll";
#else
#if defined MACOSX
    Name = SCP2_URE_DL_UNO_COMID_NORMAL("cppuhelper");
#else
    Name = SCP2_URE_DL_UNO_COMID_VER("cppuhelper", "3");
#endif
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_PurpEnvHelper
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "purpeh3.dll";
#else
#if defined MACOSX
    Name = SCP2_URE_DL_UNO_COMID_NORMAL("purpenvhelper");
#else
    Name = SCP2_URE_DL_UNO_COMID_VER("purpenvhelper", "3");
#endif
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Sal
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined MACOSX
    Name = SCP2_URE_DL_UNO_NORMAL("sal");
#else
    Name = SCP2_URE_DL_UNO_VER("sal", "3");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Salhelper
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "salhelp3.dll";
#else
#if defined MACOSX
    Name = SCP2_URE_DL_UNO_COMID_NORMAL("salhelper");
#else
    Name = SCP2_URE_DL_UNO_COMID_VER("salhelper", "3");
#endif
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

// Private Dynamic Libraries:

File gid_File_Dl_Reg
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined MACOSX
    Name = SCP2_URE_DL_NORMAL("reg");
#else
    Name = SCP2_URE_DL_VER("reg", "3");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Store
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined MACOSX
    Name = SCP2_URE_DL_NORMAL("store");
#else
    Name = SCP2_URE_DL_VER("store", "3");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Xmlreader
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_NORMAL("xmlreade");
#else
    Name = SCP2_URE_DL_NORMAL("xmlreader");
#endif
    Styles = (PACKED);
End

File gid_File_Dl_Jvmaccess
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "jvmacces.dll";
#else
#if defined MACOSX
    Name = SCP2_URE_DL_COMID_NORMAL("jvmaccess");
#else
    Name = SCP2_URE_DL_COMID_VER("jvmaccess", "3");
#endif
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Jvmfwk
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined MACOSX
    Name = SCP2_URE_DL_NORMAL("jvmfwk");
#else
    Name = SCP2_URE_DL_VER("jvmfwk", "3");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#if defined SOLAR_JAVA
File gid_File_Dl_Sunjavaplugin
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "sunjavap.dll";
#else
    Name = SCP2_URE_DL_BARE("sunjavaplugin");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Dl_JrepropertiesClass
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = "JREProperties.class";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

File gid_File_Dl_Profile_Jvmfwk3rc
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = PROFILENAME(/ure/jvmfwk3);
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_ComnameUno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL(STRING(COMNAME) "_uno");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#if defined SOLAR_JAVA
File gid_File_Dl_JavaUno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("java_uno");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA && defined MACOSX
Shortcut gid_Shortcut_Dl_JavaUno
    FileID = gid_File_Dl_JavaUno;
    Dir = SCP2_URE_DL_DIR;
    Name = "libjava_uno.jnilib";
    Styles = (RELATIVE);
End
#endif

File gid_File_Dl_UnsafeUnoUno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = "unsafe_u.dll";
#else
    Name = SCP2_URE_DL_NORMAL("unsafe_uno_uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_AffineUnoUno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_NORMAL("affine_u");
#else
    Name = SCP2_URE_DL_NORMAL("affine_uno_uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_LogUnoUno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_NORMAL("log_uno_");
#else
    Name = SCP2_URE_DL_NORMAL("log_uno_uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#if defined WNT && defined _MSC
File gid_File_Dl_Cli_Uno
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("cli_uno");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);

End
#endif

#if defined WNT && defined _MSC

File gid_File_Dl_Cli_Ure_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "cli_ure.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "cli_ure";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_URE_NEW_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif

#if defined WNT && defined _MSC

File gid_File_Dl_Policy_Cli_Ure_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "${CLI_URE_POLICY_ASSEMBLY}.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "${CLI_URE_POLICY_ASSEMBLY}";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_URE_POLICY_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif

#if defined WNT && defined _MSC 

File gid_File_Dl_Policy_Cli_Ure_Config
    TXT_FILE_BODY;
    Styles = (PACKED, ASSIGNCOMPOMENT, DONTRENAMEINPATCH);
    Name = "cli_ure.config";
    Dir = SCP2_URE_DL_DIR;
    AssignComponent = gid_File_Dl_Policy_Cli_Ure_Assembly;
End

#endif

#if defined WNT && defined _MSC

File gid_File_Dl_Cli_Basetypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "cli_basetypes.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "cli_basetypes";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_BASETYPES_NEW_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif

#if defined WNT && defined _MSC

File gid_File_Dl_Policy_Cli_Basetypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "${CLI_BASETYPES_POLICY_ASSEMBLY}.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "${CLI_BASETYPES_POLICY_ASSEMBLY}";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_BASETYPES_POLICY_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif
#if defined WNT && defined _MSC

File gid_File_Dl_Policy_Cli_Basetypes_Config
    TXT_FILE_BODY;
    Styles = (PACKED, ASSIGNCOMPOMENT, DONTRENAMEINPATCH);
    Name = "cli_basetypes.config";
    Dir = SCP2_URE_DL_DIR;
    AssignComponent = gid_File_Dl_Policy_Cli_Basetypes_Assembly;
End

#endif


#if defined WNT && defined _MSC

File gid_File_Dl_Cli_Uretypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "cli_uretypes.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "cli_uretypes";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_URETYPES_NEW_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif

#if defined WNT && defined _MSC

File gid_File_Dl_Policy_Cli_Uretypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "${CLI_URETYPES_POLICY_ASSEMBLY}.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "${CLI_URETYPES_POLICY_ASSEMBLY}";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_URETYPES_POLICY_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "MSIL";
#endif
End

#endif

#if defined WNT && defined _MSC 

File gid_File_Dl_Policy_Cli_Uretypes_Config
    TXT_FILE_BODY;
    Styles = (PACKED, ASSIGNCOMPOMENT, DONTRENAMEINPATCH);
    Name = "cli_uretypes.config";
    Dir = SCP2_URE_DL_DIR;
    AssignComponent = gid_File_Dl_Policy_Cli_Uretypes_Assembly;
End

#endif

#if defined WNT && defined _MSC

File gid_File_Lib_Cli_Cppuhelper_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "cli_cppuhelper.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "cli_cppuhelper";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_CPPUHELPER_NEW_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "x86";
#endif
End

#endif

#if defined WNT && defined _MSC

File gid_File_Lib_Policy_Cli_Cppuhelper_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY, DONTRENAMEINPATCH);
    Name = "${CLI_CPPUHELPER_POLICY_ASSEMBLY}.dll";
    Dir = SCP2_URE_DL_DIR;
    Assemblyname = "${CLI_CPPUHELPER_POLICY_ASSEMBLY}";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_CPPUHELPER_POLICY_VERSION}";
    Culture = "neutral";
    Attributes = "0";
#ifndef M1310
    ProcessorArchitecture = "x86";
#endif
End

#endif

#if defined WNT && defined _MSC

File gid_File_Lib_Policy_Cli_Cppuhelper_Config
    TXT_FILE_BODY;
    Styles = (PACKED, ASSIGNCOMPOMENT, DONTRENAMEINPATCH);
    Name = "cli_cppuhelper.config";
    Dir = SCP2_URE_DL_DIR;
    AssignComponent = gid_File_Lib_Policy_Cli_Cppuhelper_Assembly;
End

#endif

#if defined SOLAR_JAVA
File gid_File_Dl_Jpipe
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_JDL_NORMAL("jpipe");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA && defined WNT
File gid_File_Dl_Jpipx
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("jpipx");
    Styles = (PACKED);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Dl_Juh
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("juh");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Dl_Juhx
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("juhx");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

File gid_File_Dl_Acceptor
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("acceptor");
#else
    Name = SCP2_URE_DL_BARE("acceptor.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Binaryurp
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("binaryur");
#else
    Name = SCP2_URE_DL_BARE("binaryurp.uno");
#endif
    Styles = (PACKED);
End

File gid_File_Dl_Bootstrap
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("bootstra");
#else
    Name = SCP2_URE_DL_BARE("bootstrap.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Connector
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("connecto");
#else
    Name = SCP2_URE_DL_BARE("connector.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Introspection
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("introspe");
#else
    Name = SCP2_URE_DL_BARE("introspection.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Invocadapt
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("invocada");
#else
    Name = SCP2_URE_DL_BARE("invocadapt.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Invocation
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("invocati");
#else
    Name = SCP2_URE_DL_BARE("invocation.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End


#if defined SOLAR_JAVA
File gid_File_Dl_Javaloader
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("javaload");
#else
    Name = SCP2_URE_DL_BARE("javaloader.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Dl_Javavm
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("javavm");
#else
    Name = SCP2_URE_DL_BARE("javavm.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

File gid_File_Dl_Namingservice
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("namingse");
#else
    Name = SCP2_URE_DL_BARE("namingservice.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Stocservices
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("stocserv");
#else
    Name = SCP2_URE_DL_BARE("stocservices.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Proxyfac
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("proxyfac");
#else
    Name = SCP2_URE_DL_BARE("proxyfac.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Reflection
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("reflecti");
#else
    Name = SCP2_URE_DL_BARE("reflection.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Streams
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("streams");
#else
    Name = SCP2_URE_DL_BARE("streams.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Textinstream
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("textinst");
#else
    Name = SCP2_URE_DL_BARE("textinstream.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Textoutstream
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("textouts");
#else
    Name = SCP2_URE_DL_BARE("textoutstream.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

File gid_File_Dl_Uuresolver
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#ifdef OS2
    Name = SCP2_URE_DL_BARE("uuresolv");
#else
    Name = SCP2_URE_DL_BARE("uuresolver.uno");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#if !defined SYSTEM_LIBXML
File gid_File_Dl_Libxml2
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
#if defined WNT
#if defined _gcc3
    Name = SCP2_URE_DL_NORMAL("libxml2-2");
#else
    Name = SCP2_URE_DL_NORMAL("libxml2");
#endif
#elif defined MACOSX
    Name = SCP2_URE_DL_NORMAL("xml2.2");
#else
    Name = SCP2_URE_DL_VER("xml2", "2");
#endif
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if (defined WNT && defined _gcc3)
File gid_File_Lib_Mingwm10_Ure
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("mingwm10");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined(WNT) && defined( _gcc3 )

#if defined(MINGW_GCCDLL)

File gid_File_Lib_Mingw_GccS_Ure
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = MINGW_GCCDLL;
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#endif

#if defined(MINGW_GXXDLL)

File gid_File_Lib_Mingw_Stdcpp_Ure
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = MINGW_GXXDLL;
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End

#endif

#endif

#if defined WNT
File gid_File_Dl_Uwinapi
    TXT_FILE_BODY;
    Dir = SCP2_URE_DL_DIR;
    Name = SCP2_URE_DL_NORMAL("uwinapi");
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

// Public JARs:

#if defined SOLAR_JAVA
File gid_File_Java_UnoloaderJar
    TXT_FILE_BODY;
    Dir = gid_Dir_Ure_Java;
    Name = "unoloader.jar";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Java_JuhJar
    TXT_FILE_BODY;
    Dir = gid_Dir_Ure_Java;
    Name = "juh.jar";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Java_JurtJar
    TXT_FILE_BODY;
    Dir = gid_Dir_Ure_Java;
    Name = "jurt.jar";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

#if defined SOLAR_JAVA
File gid_File_Java_RidlJar
    TXT_FILE_BODY;
    Dir = gid_Dir_Ure_Java;
    Name = "ridl.jar";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

// Private JARs:

#if defined SOLAR_JAVA
File gid_File_Java_JavaUnoJar
    TXT_FILE_BODY;
    Dir = gid_Dir_Ure_Java;
    Name = "java_uno.jar";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

// Private Miscellaneous Files:

#if defined SOLAR_JAVA
File gid_File_Misc_JavavendorsXml
    TXT_FILE_BODY;
#if defined MACOSX
    Dir = gid_Brand_Dir_Program;
#else
    Dir = gid_Dir_Common_Ure;
#endif
    Name = "javavendors.xml";
    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
End
#endif

//Module

Module gid_Module_Root_Ure_Hidden
    ParentID = gid_Module_Root;
    PackageInfo = "packinfo_ure.txt";
    InstallOrder = "10";
    Name = "ure";
    Description = "ure";
	Sortkey = "2200";
	Default = YES;
	Styles = (HIDDEN_ROOT);
    Dirs = (gid_Dir_Ure_Bin,
            gid_Dir_Ure_Lib,
            gid_Dir_Ure_Java);
    Files = (gid_File_Readme_Ure,
            gid_File_LICENSE_Ure,
            gid_File_NOTICE_Ure,
            gid_File_Exe_Uno,
            gid_File_Exe_Regcomp,
            gid_File_Exe_Regmerge,
            gid_File_Exe_Regview,
            gid_File_Exe_Javaldx,
            gid_File_Exe_StartupSh,
            gid_File_Exe_UnoBin,
            gid_File_Exe_RegcompBin,
            gid_File_Dl_Cli_Uno,
            gid_File_Dl_Cli_Ure_Assembly,
            gid_File_Dl_Policy_Cli_Ure_Assembly,
            gid_File_Dl_Policy_Cli_Ure_Config,
            gid_File_Dl_Cli_Basetypes_Assembly,
            gid_File_Dl_Policy_Cli_Basetypes_Assembly,
            gid_File_Dl_Policy_Cli_Basetypes_Config,
            gid_File_Dl_Cli_Uretypes_Assembly,
            gid_File_Dl_Policy_Cli_Uretypes_Assembly,
            gid_File_Dl_Policy_Cli_Uretypes_Config,
            gid_File_Dl_Cli_Cppuhelper_Assembly,
            gid_File_Dl_Policy_Cli_Cppuhelper_Assembly,
            gid_File_Dl_Policy_Cli_Cppuhelper_Config,
           	gid_File_Lib_Cli_Cppuhelper_Assembly,
            gid_File_Lib_Policy_Cli_Cppuhelper_Assembly,
	        gid_File_Lib_Policy_Cli_Cppuhelper_Config,
            gid_File_Dl_Cppu,
            gid_File_Dl_Cppuhelper,
            gid_File_Dl_PurpEnvHelper,
            gid_File_Dl_Sal,
            gid_File_Dl_Salhelper,
            gid_File_Dl_Reg,
            gid_File_Dl_Store,
            gid_File_Dl_Xmlreader,
            gid_File_Dl_Jvmaccess,
            gid_File_Dl_Jvmfwk,
            gid_File_Dl_Sunjavaplugin,
            gid_File_Dl_JrepropertiesClass,
            gid_File_Dl_Profile_Jvmfwk3rc,
            gid_File_Dl_ComnameUno,
            gid_File_Dl_JavaUno,
            gid_File_Dl_UnsafeUnoUno,
            gid_File_Dl_AffineUnoUno,
            gid_File_Dl_LogUnoUno,
            gid_File_Dl_Jpipe,
            gid_File_Dl_Jpipx,
            gid_File_Dl_Juh,
            gid_File_Dl_Juhx,
            gid_File_Dl_Acceptor,
            gid_File_Dl_Binaryurp,
            gid_File_Dl_Bootstrap,
            gid_File_Dl_Connector,
            gid_File_Dl_Introspection,
            gid_File_Dl_Invocadapt,
            gid_File_Dl_Invocation,
            gid_File_Dl_Javaloader,
            gid_File_Dl_Javavm,
            gid_File_Dl_Namingservice,
            gid_File_Dl_Proxyfac,
            gid_File_Dl_Reflection,
            gid_File_Dl_Stocservices,
            gid_File_Dl_Streams,
            gid_File_Dl_Textinstream,
            gid_File_Dl_Textoutstream,
            gid_File_Dl_Uuresolver,
            gid_File_Dl_Libxml2,
            gid_File_Lib_Mingw_GccS_Ure,
            gid_File_Lib_Mingw_Stdcpp_Ure,
            gid_File_Lib_Mingwm10_Ure,
            gid_File_Dl_Uwinapi,
            gid_File_Java_UnoloaderJar,
            gid_File_Java_JuhJar,
            gid_File_Java_JurtJar,
            gid_File_Java_RidlJar,
            gid_File_Java_JavaUnoJar,
            gid_File_Misc_JavavendorsXml);
    Unixlinks = (gid_Unixlink_Ure_Bin_Urelibs);
End

// Windows Registry:

RegistryItem gid_Regitem_Path
    ModuleID = gid_Module_Root;
    ParentID = PREDEFINED_HKEY_CLASSES_ROOT;
    Subkey = "Software\OpenOffice\%PRODUCTNAME";
    Name = "Path";
    Value = "[INSTALLLOCATION]";
End
